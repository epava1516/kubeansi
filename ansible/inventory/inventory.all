#!/usr/bin/env python

import subprocess
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('-c', '--count', action='store_true', required=False, dest='count')
parser.add_argument('--list', action='store_true', required=False, dest='list')
args = parser.parse_args()

#bash_out = subprocess.Popen("egrep 'bootstrap|installed' /etc/nodes", shell=True, stdout=subprocess.PIPE).stdout.read()
bash_out = subprocess.Popen("cat /etc/nodes", shell=True, stdout=subprocess.PIPE).stdout.read()

servers = {
    'nodos': {
        'hosts': []
    },
    '_meta': {
        'hostvars': {}
    }
}

# Added some logic to account for newer versions of Ansible formatting newlines differently
if '\\n' in bash_out:
    bash_out_list = bash_out.split('\\n')
else:
    bash_out_list = bash_out.split('\n')

server_list = []

for line in bash_out_list:
    v=line.split(' ')
    if 3 < len(v):
        name = v[0]
        ip = v[2]
        servers['nodos']['hosts'].append(name)
        servers['_meta']['hostvars'].update({name:{'ansible_host':ip}})

print(servers)
# if args.list:
#     print(servers)
# else:
#     print(len(servers['nodos']['hosts']))